{"ast":null,"code":"export const dataNavigation = [{\n  id: ' ',\n  value: 'Home',\n  img: ''\n}, {\n  id: 'transport',\n  value: 'Transport',\n  img: ''\n}, {\n  id: 'real_estate',\n  value: 'Real Estate',\n  img: ''\n}, {\n  id: 'technics',\n  value: 'Technics',\n  img: ''\n}, {\n  id: 'cloth',\n  value: 'Cloth',\n  img: ''\n}, {\n  id: 'appliances',\n  value: 'Appliances',\n  img: ''\n}];\nexport const getAllProducts = () => {\n  return fetch('https://dummyjson.com/products').then(res => res.json()).then(body => body.products);\n};\n\n//@ts-ignore\nconst {\n  MongoClient\n} = require('mongodb');\nconst url = 'mongodb://localhost:27017/';\nconst dbName = 'BatmanData';\nconst collectionName = 'cardProduct';\nconst client = new MongoClient(url, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nasync function fetchDataFromMongoDB() {\n  try {\n    await client.connect();\n    console.log('Connected to MongoDB server');\n    const db = client.db(dbName);\n    const collection = db.collection(collectionName);\n    const result = await collection.find({}).toArray();\n    console.log(result);\n  } catch (err) {\n    console.error(err);\n  } finally {\n    await client.close();\n    console.log('Disconnected from MongoDB server');\n  }\n}\nfetchDataFromMongoDB();","map":{"version":3,"names":["dataNavigation","id","value","img","getAllProducts","fetch","then","res","json","body","products","MongoClient","require","url","dbName","collectionName","client","useNewUrlParser","useUnifiedTopology","fetchDataFromMongoDB","connect","console","log","db","collection","result","find","toArray","err","error","close"],"sources":["/Users/cavliucigor/Desktop/batman/src/server/index.tsx"],"sourcesContent":["export const dataNavigation = [\n  { id: ' ', value: 'Home', img: '' },\n  { id: 'transport', value: 'Transport', img: '' },\n  { id: 'real_estate', value: 'Real Estate', img: '' },\n  { id: 'technics', value: 'Technics', img: '' },\n  { id: 'cloth', value: 'Cloth', img: '' },\n  { id: 'appliances', value: 'Appliances', img: '' },\n]\n\nexport const getAllProducts = () => {\n  return fetch('https://dummyjson.com/products')\n    .then((res) => res.json())\n    .then((body) => body.products)\n}\n\n//@ts-ignore\nconst { MongoClient } = require('mongodb');\n\nconst url = 'mongodb://localhost:27017/';\nconst dbName = 'BatmanData';\nconst collectionName = 'cardProduct';\n\nconst client = new MongoClient(url, { useNewUrlParser: true, useUnifiedTopology: true });\n\n\nasync function fetchDataFromMongoDB() {\n  try {\n    await client.connect();\n    console.log('Connected to MongoDB server');\n\n    const db = client.db(dbName);\n    const collection = db.collection(collectionName);\n\n    const result = await collection.find({}).toArray();\n    console.log(result);\n\n  } catch (err) {\n    console.error(err);\n  } finally {\n    await client.close();\n    console.log('Disconnected from MongoDB server');\n  }\n}\n\nfetchDataFromMongoDB();\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,CAC5B;EAAEC,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,MAAM;EAAEC,GAAG,EAAE;AAAG,CAAC,EACnC;EAAEF,EAAE,EAAE,WAAW;EAAEC,KAAK,EAAE,WAAW;EAAEC,GAAG,EAAE;AAAG,CAAC,EAChD;EAAEF,EAAE,EAAE,aAAa;EAAEC,KAAK,EAAE,aAAa;EAAEC,GAAG,EAAE;AAAG,CAAC,EACpD;EAAEF,EAAE,EAAE,UAAU;EAAEC,KAAK,EAAE,UAAU;EAAEC,GAAG,EAAE;AAAG,CAAC,EAC9C;EAAEF,EAAE,EAAE,OAAO;EAAEC,KAAK,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAG,CAAC,EACxC;EAAEF,EAAE,EAAE,YAAY;EAAEC,KAAK,EAAE,YAAY;EAAEC,GAAG,EAAE;AAAG,CAAC,CACnD;AAED,OAAO,MAAMC,cAAc,GAAG,MAAM;EAClC,OAAOC,KAAK,CAAC,gCAAgC,CAAC,CAC3CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC;AAClC,CAAC;;AAED;AACA,MAAM;EAAEC;AAAY,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE1C,MAAMC,GAAG,GAAG,4BAA4B;AACxC,MAAMC,MAAM,GAAG,YAAY;AAC3B,MAAMC,cAAc,GAAG,aAAa;AAEpC,MAAMC,MAAM,GAAG,IAAIL,WAAW,CAACE,GAAG,EAAE;EAAEI,eAAe,EAAE,IAAI;EAAEC,kBAAkB,EAAE;AAAK,CAAC,CAAC;AAGxF,eAAeC,oBAAoB,GAAG;EACpC,IAAI;IACF,MAAMH,MAAM,CAACI,OAAO,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAE1C,MAAMC,EAAE,GAAGP,MAAM,CAACO,EAAE,CAACT,MAAM,CAAC;IAC5B,MAAMU,UAAU,GAAGD,EAAE,CAACC,UAAU,CAACT,cAAc,CAAC;IAEhD,MAAMU,MAAM,GAAG,MAAMD,UAAU,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,EAAE;IAClDN,OAAO,CAACC,GAAG,CAACG,MAAM,CAAC;EAErB,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZP,OAAO,CAACQ,KAAK,CAACD,GAAG,CAAC;EACpB,CAAC,SAAS;IACR,MAAMZ,MAAM,CAACc,KAAK,EAAE;IACpBT,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;EACjD;AACF;AAEAH,oBAAoB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}