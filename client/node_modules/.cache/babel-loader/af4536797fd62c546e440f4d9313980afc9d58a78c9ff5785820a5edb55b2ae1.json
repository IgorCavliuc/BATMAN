{"ast":null,"code":"export const dataNavigation = [{\n  id: ' ',\n  value: 'Home',\n  img: ''\n}, {\n  id: 'transport',\n  value: 'Transport',\n  img: ''\n}, {\n  id: 'real_estate',\n  value: 'Real Estate',\n  img: ''\n}, {\n  id: 'technics',\n  value: 'Technics',\n  img: ''\n}, {\n  id: 'cloth',\n  value: 'Cloth',\n  img: ''\n}, {\n  id: 'appliances',\n  value: 'Appliances',\n  img: ''\n}];\nexport const getAllProducts = () => {\n  return fetch('https://dummyjson.com/products').then(res => res.json()).then(body => body.products);\n};\nconst MongoClient = require('mongodb').MongoClient;\nconst uri = \"mongodb+srv://<username>:<password>@<cluster>/<database>?retryWrites=true&w=majority\";\nconst client = new MongoClient(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nclient.connect(err => {\n  const collection = client.db(\"test\").collection(\"users\");\n  // perform actions on the collection object\n  collection.find({}).toArray(function (err, result) {\n    if (err) throw err;\n    console.log(result);\n  });\n  collection.find({\n    age: {\n      $gt: 18\n    }\n  }).toArray(function (err, result) {\n    if (err) throw err;\n    console.log(result);\n  });\n  client.close();\n});","map":{"version":3,"names":["dataNavigation","id","value","img","getAllProducts","fetch","then","res","json","body","products","MongoClient","require","uri","client","useNewUrlParser","useUnifiedTopology","connect","err","collection","db","find","toArray","result","console","log","age","$gt","close"],"sources":["/Users/cavliucigor/Desktop/batman/src/server/index.tsx"],"sourcesContent":["export const dataNavigation = [\n  { id: ' ', value: 'Home', img: '' },\n  { id: 'transport', value: 'Transport', img: '' },\n  { id: 'real_estate', value: 'Real Estate', img: '' },\n  { id: 'technics', value: 'Technics', img: '' },\n  { id: 'cloth', value: 'Cloth', img: '' },\n  { id: 'appliances', value: 'Appliances', img: '' },\n]\n\nexport const getAllProducts = () => {\n  return fetch('https://dummyjson.com/products')\n    .then((res) => res.json())\n    .then((body) => body.products)\n}\n\nconst MongoClient = require('mongodb').MongoClient;\nconst uri = \"mongodb+srv://<username>:<password>@<cluster>/<database>?retryWrites=true&w=majority\";\nconst client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });\n\n\nclient.connect(err => {\n  const collection = client.db(\"test\").collection(\"users\");\n  // perform actions on the collection object\n  collection.find({}).toArray(function(err, result) {\n    if (err) throw err;\n    console.log(result);\n  });\n  \n  collection.find({ age: { $gt: 18 } }).toArray(function(err, result) {\n    if (err) throw err;\n    console.log(result);\n  });\n  \n  client.close();\n});\n\n\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,CAC5B;EAAEC,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,MAAM;EAAEC,GAAG,EAAE;AAAG,CAAC,EACnC;EAAEF,EAAE,EAAE,WAAW;EAAEC,KAAK,EAAE,WAAW;EAAEC,GAAG,EAAE;AAAG,CAAC,EAChD;EAAEF,EAAE,EAAE,aAAa;EAAEC,KAAK,EAAE,aAAa;EAAEC,GAAG,EAAE;AAAG,CAAC,EACpD;EAAEF,EAAE,EAAE,UAAU;EAAEC,KAAK,EAAE,UAAU;EAAEC,GAAG,EAAE;AAAG,CAAC,EAC9C;EAAEF,EAAE,EAAE,OAAO;EAAEC,KAAK,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAG,CAAC,EACxC;EAAEF,EAAE,EAAE,YAAY;EAAEC,KAAK,EAAE,YAAY;EAAEC,GAAG,EAAE;AAAG,CAAC,CACnD;AAED,OAAO,MAAMC,cAAc,GAAG,MAAM;EAClC,OAAOC,KAAK,CAAC,gCAAgC,CAAC,CAC3CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC;AAClC,CAAC;AAED,MAAMC,WAAW,GAAGC,OAAO,CAAC,SAAS,CAAC,CAACD,WAAW;AAClD,MAAME,GAAG,GAAG,sFAAsF;AAClG,MAAMC,MAAM,GAAG,IAAIH,WAAW,CAACE,GAAG,EAAE;EAAEE,eAAe,EAAE,IAAI;EAAEC,kBAAkB,EAAE;AAAK,CAAC,CAAC;AAGxFF,MAAM,CAACG,OAAO,CAACC,GAAG,IAAI;EACpB,MAAMC,UAAU,GAAGL,MAAM,CAACM,EAAE,CAAC,MAAM,CAAC,CAACD,UAAU,CAAC,OAAO,CAAC;EACxD;EACAA,UAAU,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,UAASJ,GAAG,EAAEK,MAAM,EAAE;IAChD,IAAIL,GAAG,EAAE,MAAMA,GAAG;IAClBM,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACrB,CAAC,CAAC;EAEFJ,UAAU,CAACE,IAAI,CAAC;IAAEK,GAAG,EAAE;MAAEC,GAAG,EAAE;IAAG;EAAE,CAAC,CAAC,CAACL,OAAO,CAAC,UAASJ,GAAG,EAAEK,MAAM,EAAE;IAClE,IAAIL,GAAG,EAAE,MAAMA,GAAG;IAClBM,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACrB,CAAC,CAAC;EAEFT,MAAM,CAACc,KAAK,EAAE;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}