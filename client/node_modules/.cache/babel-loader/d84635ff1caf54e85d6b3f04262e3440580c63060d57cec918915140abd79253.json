{"ast":null,"code":"import { MongoClient } from 'mongodb';\nconst uri = 'mongodb+srv://<username>:<password>@<cluster>/<database>?retryWrites=true&w=majority';\nasync function getUsers() {\n  const client = new MongoClient(uri, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  try {\n    await client.connect();\n    console.log('Connected to MongoDB');\n    const db = client.db('test');\n    const users = db.collection('users');\n    const result = await users.find({}).toArray();\n    return result;\n  } catch (err) {\n    console.error(err);\n    return [];\n  } finally {\n    await client.close();\n    console.log('Disconnected from MongoDB');\n  }\n}\nasync function main() {\n  const users = await getUsers();\n  console.log(users);\n}\nmain();\nexport const dataNavigation = [{\n  id: ' ',\n  value: 'Home',\n  img: ''\n}, {\n  id: 'transport',\n  value: 'Transport',\n  img: ''\n}, {\n  id: 'real_estate',\n  value: 'Real Estate',\n  img: ''\n}, {\n  id: 'technics',\n  value: 'Technics',\n  img: ''\n}, {\n  id: 'cloth',\n  value: 'Cloth',\n  img: ''\n}, {\n  id: 'appliances',\n  value: 'Appliances',\n  img: ''\n}];\nexport const getAllProducts = () => {\n  return fetch('https://dummyjson.com/products').then(res => res.json()).then(body => body.products);\n};","map":{"version":3,"names":["MongoClient","uri","getUsers","client","useNewUrlParser","useUnifiedTopology","connect","console","log","db","users","collection","result","find","toArray","err","error","close","main","dataNavigation","id","value","img","getAllProducts","fetch","then","res","json","body","products"],"sources":["/Users/cavliucigor/Desktop/batman/src/server/index.tsx"],"sourcesContent":["import { MongoClient, Collection, Cursor, Document } from 'mongodb';\n\ninterface User {\n  name: string;\n  age: number;\n  email: string;\n}\n\nconst uri = 'mongodb+srv://<username>:<password>@<cluster>/<database>?retryWrites=true&w=majority';\n\nasync function getUsers(): Promise<User[]> {\n  const client: MongoClient = new MongoClient(uri, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n\n  try {\n    await client.connect();\n    console.log('Connected to MongoDB');\n\n    const db = client.db('test');\n    const users: Collection<User> = db.collection('users');\n\n    const result: User[] = await users.find({}).toArray();\n\n    return result;\n  } catch (err) {\n    console.error(err);\n    return [];\n  } finally {\n    await client.close();\n    console.log('Disconnected from MongoDB');\n  }\n}\n\nasync function main(): Promise<void> {\n  const users: User[] = await getUsers();\n\n  console.log(users);\n}\n\nmain();\n\n\nexport const dataNavigation = [\n  { id: ' ', value: 'Home', img: '' },\n  { id: 'transport', value: 'Transport', img: '' },\n  { id: 'real_estate', value: 'Real Estate', img: '' },\n  { id: 'technics', value: 'Technics', img: '' },\n  { id: 'cloth', value: 'Cloth', img: '' },\n  { id: 'appliances', value: 'Appliances', img: '' },\n]\n\nexport const getAllProducts = () => {\n  return fetch('https://dummyjson.com/products')\n    .then((res) => res.json())\n    .then((body) => body.products)\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAsC,SAAS;AAQnE,MAAMC,GAAG,GAAG,sFAAsF;AAElG,eAAeC,QAAQ,GAAoB;EACzC,MAAMC,MAAmB,GAAG,IAAIH,WAAW,CAACC,GAAG,EAAE;IAC/CG,eAAe,EAAE,IAAI;IACrBC,kBAAkB,EAAE;EACtB,CAAC,CAAC;EAEF,IAAI;IACF,MAAMF,MAAM,CAACG,OAAO,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IAEnC,MAAMC,EAAE,GAAGN,MAAM,CAACM,EAAE,CAAC,MAAM,CAAC;IAC5B,MAAMC,KAAuB,GAAGD,EAAE,CAACE,UAAU,CAAC,OAAO,CAAC;IAEtD,MAAMC,MAAc,GAAG,MAAMF,KAAK,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,EAAE;IAErD,OAAOF,MAAM;EACf,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZR,OAAO,CAACS,KAAK,CAACD,GAAG,CAAC;IAClB,OAAO,EAAE;EACX,CAAC,SAAS;IACR,MAAMZ,MAAM,CAACc,KAAK,EAAE;IACpBV,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC1C;AACF;AAEA,eAAeU,IAAI,GAAkB;EACnC,MAAMR,KAAa,GAAG,MAAMR,QAAQ,EAAE;EAEtCK,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;AACpB;AAEAQ,IAAI,EAAE;AAGN,OAAO,MAAMC,cAAc,GAAG,CAC5B;EAAEC,EAAE,EAAE,GAAG;EAAEC,KAAK,EAAE,MAAM;EAAEC,GAAG,EAAE;AAAG,CAAC,EACnC;EAAEF,EAAE,EAAE,WAAW;EAAEC,KAAK,EAAE,WAAW;EAAEC,GAAG,EAAE;AAAG,CAAC,EAChD;EAAEF,EAAE,EAAE,aAAa;EAAEC,KAAK,EAAE,aAAa;EAAEC,GAAG,EAAE;AAAG,CAAC,EACpD;EAAEF,EAAE,EAAE,UAAU;EAAEC,KAAK,EAAE,UAAU;EAAEC,GAAG,EAAE;AAAG,CAAC,EAC9C;EAAEF,EAAE,EAAE,OAAO;EAAEC,KAAK,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAG,CAAC,EACxC;EAAEF,EAAE,EAAE,YAAY;EAAEC,KAAK,EAAE,YAAY;EAAEC,GAAG,EAAE;AAAG,CAAC,CACnD;AAED,OAAO,MAAMC,cAAc,GAAG,MAAM;EAClC,OAAOC,KAAK,CAAC,gCAAgC,CAAC,CAC3CC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC;AAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}