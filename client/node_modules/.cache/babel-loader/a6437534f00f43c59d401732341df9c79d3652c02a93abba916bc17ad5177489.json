{"ast":null,"code":"var _jsxFileName = \"/Users/cavliucigor/Desktop/BATMAN/client/src/Companent/Product/index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { getAllProducts } from \"../../server\";\nimport { ProductCard } from \"../../ui\";\nimport { getAllProduct } from \"../../Redux/Products/productSlice\";\nimport { dataProductSlice } from \"../../Redux/Products/productSlice\";\nimport { connect } from \"react-redux\";\nimport { useLocation } from 'react-router-dom';\nimport './style/index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Product = _ref => {\n  _s();\n  let {\n    items,\n    getAllProduct\n  } = _ref;\n  const location = useLocation();\n  useEffect(() => {\n    var _location$pathname;\n    getAllProducts(location === null || location === void 0 ? void 0 : (_location$pathname = location.pathname) === null || _location$pathname === void 0 ? void 0 : _location$pathname.split('/')[1]).then(res => getAllProduct(res));\n  }, [getAllProduct, location === null || location === void 0 ? void 0 : location.pathname]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"batman-store__container\",\n    children: items === null || items === void 0 ? void 0 : items.map(item => /*#__PURE__*/_jsxDEV(ProductCard, {\n      ...item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Product, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n_c = Product;\nconst mapStateToProps = state => ({\n  items: dataProductSlice(state)\n});\nexport default connect(mapStateToProps, {\n  getAllProduct\n})(Product);\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["useEffect","getAllProducts","ProductCard","getAllProduct","dataProductSlice","connect","useLocation","Product","items","location","pathname","split","then","res","map","item","mapStateToProps","state"],"sources":["/Users/cavliucigor/Desktop/BATMAN/client/src/Companent/Product/index.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { getAllProducts } from \"../../server\";\nimport { ProductCard } from \"../../ui\";\nimport { getAllProduct } from \"../../Redux/Products/productSlice\";\nimport { dataProductSlice } from \"../../Redux/Products/productSlice\";\nimport { connect } from \"react-redux\";\nimport { IProduct } from \"../../type\";\nimport { useLocation } from 'react-router-dom';\n\nimport './style/index.scss'\n\ninterface Props {\n  items: IProduct[];\n  getAllProduct:(e:any)=>void\n}\n\nconst Product = ({ items, getAllProduct }: Props) => {\n  const location = useLocation()\n\n  useEffect(() => {\n    getAllProducts(location?.pathname?.split('/')[1]).then((res) => getAllProduct(res));\n  }, [getAllProduct, location?.pathname]);\n\n  return (\n    <div className=\"batman-store__container\">\n      {items?.map((item: IProduct) => (\n        <ProductCard {...item} />\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  items: dataProductSlice(state),\n});\n\nexport default connect(mapStateToProps, {getAllProduct})(Product);\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,cAAc;AAC7C,SAASC,WAAW,QAAQ,UAAU;AACtC,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,OAAO,QAAQ,aAAa;AAErC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,oBAAoB;AAAA;AAO3B,MAAMC,OAAO,GAAG,QAAqC;EAAA;EAAA,IAApC;IAAEC,KAAK;IAAEL;EAAqB,CAAC;EAC9C,MAAMM,QAAQ,GAAGH,WAAW,EAAE;EAE9BN,SAAS,CAAC,MAAM;IAAA;IACdC,cAAc,CAACQ,QAAQ,aAARA,QAAQ,6CAARA,QAAQ,CAAEC,QAAQ,uDAAlB,mBAAoBC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKV,aAAa,CAACU,GAAG,CAAC,CAAC;EACrF,CAAC,EAAE,CAACV,aAAa,EAAEM,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,QAAQ,CAAC,CAAC;EAEvC,oBACE;IAAK,SAAS,EAAC,yBAAyB;IAAA,UACrCF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEM,GAAG,CAAEC,IAAc,iBACzB,QAAC,WAAW;MAAA,GAAKA;IAAI;MAAA;MAAA;MAAA;IAAA,QACtB;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GAdIR,OAAO;EAAA,QACMD,WAAW;AAAA;AAAA,KADxBC,OAAO;AAgBb,MAAMS,eAAe,GAAIC,KAAU,KAAM;EACvCT,KAAK,EAAEJ,gBAAgB,CAACa,KAAK;AAC/B,CAAC,CAAC;AAEF,eAAeZ,OAAO,CAACW,eAAe,EAAE;EAACb;AAAa,CAAC,CAAC,CAACI,OAAO,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}