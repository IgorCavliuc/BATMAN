{"ast":null,"code":"// export const dataNavigation = [\n//   { id: ' ', value: 'Home', img: '' },\n//   { id: 'transport', value: 'Transport', img: '' },\n//   { id: 'real_estate', value: 'Real Estate', img: '' },\n//   { id: 'technics', value: 'Technics', img: '' },\n//   { id: 'cloth', value: 'Cloth', img: '' },\n//   { id: 'appliances', value: 'Appliances', img: '' },\n// ]\n\n// export const getAllProducts = () => {\n//   return fetch('https://dummyjson.com/products')\n//     .then((res) => res.json())\n//     .then((body) => body.products)\n// }\n\n//@ts-ignore\nconst {\n  MongoClient\n} = require('mongodb');\nconst url = 'mongodb://localhost:27017/';\nconst dbName = 'BatmanData';\nconst collectionName = 'Betma';\nconst client = new MongoClient(url, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nasync function fetchDataFromMongoDB() {\n  try {\n    await client.connect();\n    console.log('Connected to MongoDB server');\n    const db = client.db(dbName);\n    const collection = db.collection(collectionName);\n    const result = await collection.find({}).toArray();\n    console.log(result);\n  } catch (err) {\n    console.error(err);\n  } finally {\n    await client.close();\n    console.log('Disconnected from MongoDB server');\n  }\n}\nfetchDataFromMongoDB();","map":{"version":3,"names":["MongoClient","require","url","dbName","collectionName","client","useNewUrlParser","useUnifiedTopology","fetchDataFromMongoDB","connect","console","log","db","collection","result","find","toArray","err","error","close"],"sources":["/Users/cavliucigor/Desktop/batman/src/server/index.tsx"],"sourcesContent":["// export const dataNavigation = [\n//   { id: ' ', value: 'Home', img: '' },\n//   { id: 'transport', value: 'Transport', img: '' },\n//   { id: 'real_estate', value: 'Real Estate', img: '' },\n//   { id: 'technics', value: 'Technics', img: '' },\n//   { id: 'cloth', value: 'Cloth', img: '' },\n//   { id: 'appliances', value: 'Appliances', img: '' },\n// ]\n\n// export const getAllProducts = () => {\n//   return fetch('https://dummyjson.com/products')\n//     .then((res) => res.json())\n//     .then((body) => body.products)\n// }\n\n//@ts-ignore\nconst { MongoClient } = require('mongodb');\n\nconst url = 'mongodb://localhost:27017/';\nconst dbName = 'BatmanData';\nconst collectionName = 'Betma';\n\nconst client = new MongoClient(url, { useNewUrlParser: true, useUnifiedTopology: true });\n\nasync function fetchDataFromMongoDB() {\n  try {\n    await client.connect();\n    console.log('Connected to MongoDB server');\n\n    const db = client.db(dbName);\n    const collection = db.collection(collectionName);\n\n    const result = await collection.find({}).toArray();\n    console.log(result);\n\n  } catch (err) {\n    console.error(err);\n  } finally {\n    await client.close();\n    console.log('Disconnected from MongoDB server');\n  }\n}\n\nfetchDataFromMongoDB();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE1C,MAAMC,GAAG,GAAG,4BAA4B;AACxC,MAAMC,MAAM,GAAG,YAAY;AAC3B,MAAMC,cAAc,GAAG,OAAO;AAE9B,MAAMC,MAAM,GAAG,IAAIL,WAAW,CAACE,GAAG,EAAE;EAAEI,eAAe,EAAE,IAAI;EAAEC,kBAAkB,EAAE;AAAK,CAAC,CAAC;AAExF,eAAeC,oBAAoB,GAAG;EACpC,IAAI;IACF,MAAMH,MAAM,CAACI,OAAO,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAE1C,MAAMC,EAAE,GAAGP,MAAM,CAACO,EAAE,CAACT,MAAM,CAAC;IAC5B,MAAMU,UAAU,GAAGD,EAAE,CAACC,UAAU,CAACT,cAAc,CAAC;IAEhD,MAAMU,MAAM,GAAG,MAAMD,UAAU,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,EAAE;IAClDN,OAAO,CAACC,GAAG,CAACG,MAAM,CAAC;EAErB,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZP,OAAO,CAACQ,KAAK,CAACD,GAAG,CAAC;EACpB,CAAC,SAAS;IACR,MAAMZ,MAAM,CAACc,KAAK,EAAE;IACpBT,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;EACjD;AACF;AAEAH,oBAAoB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}