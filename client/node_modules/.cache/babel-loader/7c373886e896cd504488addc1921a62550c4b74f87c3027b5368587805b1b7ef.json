{"ast":null,"code":"export const getReducerType = function () {\n  let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  let after = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  return type.toUpperCase() + \"_\" + key.toUpperCase() + (after ? \"_\" + after.toUpperCase() : \"\");\n};\nexport const getActionValue = (type, key, payload) => {\n  return {\n    type: getReducerType(type, key),\n    payload\n  };\n};\nexport const getActionSelect = (type, key) => {\n  const reducer_type = v => getReducerType(type, key, v);\n  return {\n    selected: payload => ({\n      type: reducer_type(\"selected\"),\n      payload\n    }),\n    items: payload => ({\n      type: reducer_type(\"items\"),\n      payload\n    }),\n    loading: payload => ({\n      type: reducer_type(\"loading\"),\n      payload\n    })\n  };\n};\nexport const getValidate = function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  const res = {};\n  data.forEach(item => {\n    let isEmpty = false;\n    let message = [];\n    let error = false;\n    if ((item === null || item === void 0 ? void 0 : item.type) === \"select\") {\n      var _item$value;\n      isEmpty = !(item !== null && item !== void 0 && (_item$value = item.value) !== null && _item$value !== void 0 && _item$value.id);\n      error = isEmpty;\n    }\n    if ((item === null || item === void 0 ? void 0 : item.type) === \"input\") {\n      var _item$value2;\n      isEmpty = !(item !== null && item !== void 0 && (_item$value2 = item.value) !== null && _item$value2 !== void 0 && _item$value2.trim());\n      error = isEmpty;\n    }\n    if (!isEmpty) {\n      var _item$validation;\n      const validations = (_item$validation = item === null || item === void 0 ? void 0 : item.validation) !== null && _item$validation !== void 0 ? _item$validation : [];\n      validations.forEach(val => {\n        if (val !== null && val !== void 0 && val.condition) {\n          var _val$message;\n          error = true;\n          message.push((_val$message = val === null || val === void 0 ? void 0 : val.message) !== null && _val$message !== void 0 ? _val$message : \"\");\n        }\n      });\n    }\n    message = message.map((err, i) => (i ? err[0].toLowerCase() : err[0].toUpperCase()) + err.slice(1)).join(\", \");\n    if (item !== null && item !== void 0 && item.id) {\n      res[item.id] = {\n        error,\n        message\n      };\n    }\n  });\n  return res;\n};","map":{"version":3,"names":["getReducerType","type","key","after","toUpperCase","getActionValue","payload","getActionSelect","reducer_type","v","selected","items","loading","getValidate","data","res","forEach","item","isEmpty","message","error","value","id","trim","validations","validation","val","condition","push","map","err","i","toLowerCase","slice","join"],"sources":["/Users/cavliucigor/Desktop/batman/src/utils/index.tsx"],"sourcesContent":["\nexport const getReducerType = (type = \"\", key = \"\", after = \"\") => {\n  return (\n    type.toUpperCase() +\n    \"_\" +\n    key.toUpperCase() +\n    (after ? \"_\" + after.toUpperCase() : \"\")\n  );\n};\n\nexport const getActionValue = (type, key, payload) => {\n  return { type: getReducerType(type, key), payload };\n};\n\nexport const getActionSelect = (type, key) => {\n  const reducer_type = (v) => getReducerType(type, key, v);\n\n  return {\n    selected: (payload) => ({ type: reducer_type(\"selected\"), payload }),\n    items: (payload) => ({ type: reducer_type(\"items\"), payload }),\n    loading: (payload) => ({ type: reducer_type(\"loading\"), payload }),\n  };\n};\n\nexport const getValidate = (data = []) => {\n  const res = {};\n\n  data.forEach((item) => {\n    let isEmpty = false;\n    let message = [];\n    let error = false;\n\n    if (item?.type === \"select\") {\n      isEmpty = !item?.value?.id;\n      error = isEmpty;\n    }\n\n    if (item?.type === \"input\") {\n      isEmpty = !item?.value?.trim();\n      error = isEmpty;\n    }\n\n    if (!isEmpty) {\n      const validations = item?.validation ?? [];\n\n      validations.forEach((val) => {\n        if (val?.condition) {\n          error = true;\n          message.push(val?.message ?? \"\");\n        }\n      });\n    }\n\n    message = message\n      .map(\n        (err, i) =>\n          (i ? err[0].toLowerCase() : err[0].toUpperCase()) + err.slice(1)\n      )\n      .join(\", \");\n\n    if (item?.id) {\n      res[item.id] = { error, message };\n    }\n  });\n\n  return res;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}