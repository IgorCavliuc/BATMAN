{"ast":null,"code":"// export const getAllProducts = () => {\n//   return fetch('https://dummyjson.com/products')\n//     .then((res) => res.json())\n//     .then((body) => body.products)\n// }\n\nconst {\n  MongoClient,\n  Collection\n} = require('mongodb');\nconst express = require('express');\n\n// export const dataNavigation = [\n//   { id: ' ', value: 'Home', img: '' },\n//   { id: 'transport', value: 'Transport', img: '' },\n//   { id: 'real_estate', value: 'Real Estate', img: '' },\n//   { id: 'technics', value: 'Technics', img: '' },\n//   { id: 'cloth', value: 'Cloth', img: '' },\n//   { id: 'appliances', value: 'Appliances', img: '' },\n// ]\n\nconst uri = 'mongodb+srv://Cavliuc:Qwerty123@cardproduct.3rbu7rh.mongodb.net/?retryWrites=true&w=majority';\nconst app = express();\n\n// Retrieve all users\napp.get('/users', async (req, res) => {\n  const client = new MongoClient(uri, {\n    //@ts-ignore\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n  try {\n    await client.connect();\n    console.log('Connected to MongoDB');\n    const db = client.db('test');\n    const users = db.collection('users');\n    const result = await users.find({}).toArray();\n    console.log(res);\n    res.send(result);\n  } catch (err) {\n    console.error(err);\n    res.status(500).send('Internal server error');\n  } finally {\n    await client.close();\n    console.log('Disconnected from MongoDB');\n  }\n});\napp.listen(3000, () => {\n  console.log('Server listening on port 3000');\n});","map":{"version":3,"names":["MongoClient","Collection","require","express","uri","app","get","req","res","client","useNewUrlParser","useUnifiedTopology","connect","console","log","db","users","collection","result","find","toArray","send","err","error","status","close","listen"],"sources":["/Users/cavliucigor/Desktop/batman/src/server/index.tsx"],"sourcesContent":["\n\n// export const getAllProducts = () => {\n//   return fetch('https://dummyjson.com/products')\n//     .then((res) => res.json())\n//     .then((body) => body.products)\n// }\n\nconst { MongoClient, Collection } = require('mongodb');\n\nconst express = require('express');\n\n\n// export const dataNavigation = [\n//   { id: ' ', value: 'Home', img: '' },\n//   { id: 'transport', value: 'Transport', img: '' },\n//   { id: 'real_estate', value: 'Real Estate', img: '' },\n//   { id: 'technics', value: 'Technics', img: '' },\n//   { id: 'cloth', value: 'Cloth', img: '' },\n//   { id: 'appliances', value: 'Appliances', img: '' },\n// ]\n\n\ninterface User {\n  name: string;\n  age: number;\n  email: string;\n}\n\nconst uri = 'mongodb+srv://Cavliuc:Qwerty123@cardproduct.3rbu7rh.mongodb.net/?retryWrites=true&w=majority';\n\nconst app = express();\n\n// Retrieve all users\napp.get('/users', async (req:any, res:any) => {\n  const client: MongoClient = new MongoClient(uri, {\n    //@ts-ignore\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n\n  try {\n    await client.connect();\n    console.log('Connected to MongoDB');\n\n    const db = client.db('test');\n    const users: Collection<User> = db.collection('users');\n\n    const result: User[] = await users.find({}).toArray();\nconsole.log(res)\n    res.send(result);\n  } catch (err) {\n    console.error(err);\n    res.status(500).send('Internal server error');\n  } finally {\n    await client.close();\n    console.log('Disconnected from MongoDB');\n  }\n});\n\napp.listen(3000, () => {\n  console.log('Server listening on port 3000');\n});\n"],"mappings":"AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EAAEA,WAAW;EAAEC;AAAW,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AAEtD,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;;AAGlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA,MAAME,GAAG,GAAG,8FAA8F;AAE1G,MAAMC,GAAG,GAAGF,OAAO,EAAE;;AAErB;AACAE,GAAG,CAACC,GAAG,CAAC,QAAQ,EAAE,OAAOC,GAAO,EAAEC,GAAO,KAAK;EAC5C,MAAMC,MAAmB,GAAG,IAAIT,WAAW,CAACI,GAAG,EAAE;IAC/C;IACAM,eAAe,EAAE,IAAI;IACrBC,kBAAkB,EAAE;EACtB,CAAC,CAAC;EAEF,IAAI;IACF,MAAMF,MAAM,CAACG,OAAO,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IAEnC,MAAMC,EAAE,GAAGN,MAAM,CAACM,EAAE,CAAC,MAAM,CAAC;IAC5B,MAAMC,KAAuB,GAAGD,EAAE,CAACE,UAAU,CAAC,OAAO,CAAC;IAEtD,MAAMC,MAAc,GAAG,MAAMF,KAAK,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,EAAE;IACzDP,OAAO,CAACC,GAAG,CAACN,GAAG,CAAC;IACZA,GAAG,CAACa,IAAI,CAACH,MAAM,CAAC;EAClB,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZT,OAAO,CAACU,KAAK,CAACD,GAAG,CAAC;IAClBd,GAAG,CAACgB,MAAM,CAAC,GAAG,CAAC,CAACH,IAAI,CAAC,uBAAuB,CAAC;EAC/C,CAAC,SAAS;IACR,MAAMZ,MAAM,CAACgB,KAAK,EAAE;IACpBZ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC1C;AACF,CAAC,CAAC;AAEFT,GAAG,CAACqB,MAAM,CAAC,IAAI,EAAE,MAAM;EACrBb,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;AAC9C,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}