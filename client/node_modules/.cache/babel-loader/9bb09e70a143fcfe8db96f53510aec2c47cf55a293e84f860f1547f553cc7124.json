{"ast":null,"code":"export const getAllNavigate = () => {\n  return fetch(\"http://localhost:3000/navigation\").then(res => res);\n};\nexport const getAllProducts = () => {\n  return fetch(\"http://localhost:3000/transport-products\").then(res => res.json()).then(body => body.products);\n};\n\n// export const getAllNavigate = () => {\n//   try {\n//     let res = fetch(\"http://localhost:3001\", {\n//       mode: \"cors\",\n//     });\n\n//     if (!res.ok) {\n//       console.log(res);\n//       throw new Error(res.statusText || res.status);\n//     }\n\n//     let data = res.json();\n//     console.log(data);\n//   } catch (err) {\n//     console.error(err);\n//     alert(\"Произошла ошибка...\");\n//   }\n// };","map":{"version":3,"names":["getAllNavigate","fetch","then","res","getAllProducts","json","body","products"],"sources":["/Users/cavliucigor/Desktop/batman/client/src/server/index.js"],"sourcesContent":["export const getAllNavigate = () => {\n  return fetch(\"http://localhost:3000/navigation\").then((res) => res);\n};\nexport const getAllProducts = () => {\n  return fetch(\"http://localhost:3000/transport-products\")\n    .then((res) => res.json())\n    .then((body) => body.products);\n};\n\n// export const getAllNavigate = () => {\n//   try {\n//     let res = fetch(\"http://localhost:3001\", {\n//       mode: \"cors\",\n//     });\n\n//     if (!res.ok) {\n//       console.log(res);\n//       throw new Error(res.statusText || res.status);\n//     }\n\n//     let data = res.json();\n//     console.log(data);\n//   } catch (err) {\n//     console.error(err);\n//     alert(\"Произошла ошибка...\");\n//   }\n// };\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,MAAM;EAClC,OAAOC,KAAK,CAAC,kCAAkC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAAC;AACrE,CAAC;AACD,OAAO,MAAMC,cAAc,GAAG,MAAM;EAClC,OAAOH,KAAK,CAAC,0CAA0C,CAAC,CACrDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACE,IAAI,EAAE,CAAC,CACzBH,IAAI,CAAEI,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAAC;AAClC,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}