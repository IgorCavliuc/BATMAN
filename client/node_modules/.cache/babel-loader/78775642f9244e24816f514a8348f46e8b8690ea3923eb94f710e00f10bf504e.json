{"ast":null,"code":"// export const dataNavigation = [\n//   { id: \" \", value: \"Home\", img: \"\" },\n//   { id: \"transport\", value: \"Transport\", img: \"\" },\n//   { id: \"real_estate\", value: \"Real Estate\", img: \"\" },\n//   { id: \"technics\", value: \"Technics\", img: \"\" },\n//   { id: \"cloth\", value: \"Cloth\", img: \"\" },\n//   { id: \"appliances\", value: \"Appliances\", img: \"\" },\n// ];\n\n// export let dataNavigation = [\n//   { id: \" \", value: \"Home\", img: \"\" },\n//   { id: \"transport\", value: \"Transport\", img: \"\" },\n//   { id: \"real_estate\", value: \"Real Estate\", img: \"\" },\n//   { id: \"technics\", value: \"Technics\", img: \"\" },\n//   { id: \"cloth\", value: \"Cloth\", img: \"\" },\n//   { id: \"appliances\", value: \"Appliances\", img: \"\" },\n// ];\n\nexport const getAllNavigate = () => {\n  fetch(\"http://localhost:3000/todos\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      title: \"Buy milk\",\n      completed: false\n    })\n  }).then(response => {\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n    return response.json();\n  }).then(data => {\n    console.log(data);\n  }).catch(error => {\n    console.error(\"There was a problem with the fetch operation:\", error);\n  });\n};\nexport const getAllProducts = () => {\n  return fetch(\"http://localhost:3001/transport-products\").then(res => res.json()).then(body => body.products);\n};\n\n// export const getAllNavigate = () => {\n//   try {\n//     let res = fetch(\"http://localhost:3001\", {\n//       mode: \"cors\",\n//     });\n\n//     if (!res.ok) {\n//       console.log(res);\n//       throw new Error(res.statusText || res.status);\n//     }\n\n//     let data = res.json();\n//     console.log(data);\n//   } catch (err) {\n//     console.error(err);\n//     alert(\"Произошла ошибка...\");\n//   }\n// };","map":{"version":3,"names":["getAllNavigate","fetch","method","headers","body","JSON","stringify","title","completed","then","response","ok","Error","json","data","console","log","catch","error","getAllProducts","res","products"],"sources":["/Users/cavliucigor/Desktop/batman/client/src/server/index.js"],"sourcesContent":["// export const dataNavigation = [\n//   { id: \" \", value: \"Home\", img: \"\" },\n//   { id: \"transport\", value: \"Transport\", img: \"\" },\n//   { id: \"real_estate\", value: \"Real Estate\", img: \"\" },\n//   { id: \"technics\", value: \"Technics\", img: \"\" },\n//   { id: \"cloth\", value: \"Cloth\", img: \"\" },\n//   { id: \"appliances\", value: \"Appliances\", img: \"\" },\n// ];\n\n// export let dataNavigation = [\n//   { id: \" \", value: \"Home\", img: \"\" },\n//   { id: \"transport\", value: \"Transport\", img: \"\" },\n//   { id: \"real_estate\", value: \"Real Estate\", img: \"\" },\n//   { id: \"technics\", value: \"Technics\", img: \"\" },\n//   { id: \"cloth\", value: \"Cloth\", img: \"\" },\n//   { id: \"appliances\", value: \"Appliances\", img: \"\" },\n// ];\n\nexport const getAllNavigate = () => {\n  fetch(\"http://localhost:3000/todos\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ title: \"Buy milk\", completed: false }),\n  })\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    })\n    .then((data) => {\n      console.log(data);\n    })\n    .catch((error) => {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    });\n};\nexport const getAllProducts = () => {\n  return fetch(\"http://localhost:3001/transport-products\")\n    .then((res) => res.json())\n    .then((body) => body.products);\n};\n\n// export const getAllNavigate = () => {\n//   try {\n//     let res = fetch(\"http://localhost:3001\", {\n//       mode: \"cors\",\n//     });\n\n//     if (!res.ok) {\n//       console.log(res);\n//       throw new Error(res.statusText || res.status);\n//     }\n\n//     let data = res.json();\n//     console.log(data);\n//   } catch (err) {\n//     console.error(err);\n//     alert(\"Произошла ошибка...\");\n//   }\n// };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,cAAc,GAAG,MAAM;EAClCC,KAAK,CAAC,6BAA6B,EAAE;IACnCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,KAAK,EAAE,UAAU;MAAEC,SAAS,EAAE;IAAM,CAAC;EAC9D,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAOF,QAAQ,CAACG,IAAI,EAAE;EACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;IACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;IAChBH,OAAO,CAACG,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;EACvE,CAAC,CAAC;AACN,CAAC;AACD,OAAO,MAAMC,cAAc,GAAG,MAAM;EAClC,OAAOlB,KAAK,CAAC,0CAA0C,CAAC,CACrDQ,IAAI,CAAEW,GAAG,IAAKA,GAAG,CAACP,IAAI,EAAE,CAAC,CACzBJ,IAAI,CAAEL,IAAI,IAAKA,IAAI,CAACiB,QAAQ,CAAC;AAClC,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}